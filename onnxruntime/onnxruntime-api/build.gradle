group "ai.djl.onnxruntime"

task downloadOrt() {
    def file = file("${project.buildDir}/onnxruntime-${onnxruntime_version}.jar")
    outputs.file file
    doFirst {
        if (!file.exists()) {
            println "Downloading ${file} ..."
            def url = "https://djl-ai.s3.amazonaws.com/publish/onnxruntime-${onnxruntime_version}/Linux/cpu/onnxruntime-${onnxruntime_version}.jar"
            new URL(url).withInputStream { i -> file.withOutputStream { it << i } }
        }
    }
}

task copyJar(type: Copy) {
    from jar.outputs.files.singleFile
    into "../onnxruntime-engine/libs/"
}

jar {
    dependsOn downloadOrt
    from(zipTree(new File("${project.buildDir}/onnxruntime-${onnxruntime_version}.jar"))) {
        exclude "ai/onnxruntime/native/**"
        exclude "META-INF/**"
    }
}
jar.finalizedBy(copyJar)

publishing {
    publications {
        maven(MavenPublication) {
            artifactId "onnxruntime-api"
            pom {
                name = "ONNX Runtime API"
                description = "ONNX Runtime Java API for DJL"
                url = "http://www.djl.ai/onnxruntime/${project.name}"
            }
        }
    }
}